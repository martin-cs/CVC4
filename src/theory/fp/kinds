# kinds                                                               -*- sh -*-
#
# For documentation on this file format, please refer to
# src/theory/builtin/kinds.
#

theory THEORY_FP ::CVC4::theory::fp::TheoryFp "theory/fp/theory_fp.h"
typechecker "theory/fp/theory_fp_type_rules.h"
rewriter ::CVC4::theory::fp::TheoryFpRewriter "theory/fp/theory_fp_rewriter.h"

properties check

# Theory content goes here.

# constants...
constant CONST_FLOATINGPOINT \
    ::CVC4::FloatingPoint \
    ::CVC4::FloatingPointHashFunction \
    "util/floatingpoint.h" \
    "a floating-point literal"

typerule CONST_FLOATINGPOINT    ::CVC4::theory::fp::FloatingPointConstantTypeRule


constant CONST_ROUNDINGMODE \
    ::CVC4::RoundingMode \
    ::CVC4::RoundingModeHashFunction \
    "util/floatingpoint.h" \
    "a floating-point rounding mode"    




# types...
sort ROUNDINGMODE_TYPE \
    5 \
    well-founded \
    "NodeManager::currentNM()->mkConst(true)" \
    "expr/node_manager.h" \
    "floating-point rounding mode"

constant FLOATINGPOINT_TYPE \
    ::CVC4::FloatingPointSize \
    ::CVC4::FloatingPointSizeHashFunction \
    "util/floatingpoint.h" \
    "floating-point type"
#cardinality FLOATINGPOINT_TYPE "function" "header"
#enumerator FLOATINGPOINT_TYPE "function" "header"
#well-founded FLOATINGPOINT_TYPE true "function" "header"


# operators...
operator FLOATINGPOINT_FP 3 "construct a floating-point literal from bit vectors"

operator FLOATINGPOINT_EQ 2: "floating-point equality"
operator FLOATINGPOINT_ABS 1 "floating-point absolute value"
operator FLOATINGPOINT_NEG 1 "floating-point negation"
operator FLOATINGPOINT_PLUS 3 "floating-point addition"
operator FLOATINGPOINT_SUB 3 "floating-point sutraction"
operator FLOATINGPOINT_MULT 3 "floating-point multiply"
operator FLOATINGPOINT_DIV 3 "floating-point division"
operator FLOATINGPOINT_FMA 4 "floating-point fused multiply and add"
operator FLOATINGPOINT_SQRT 2 "floating-point square root"
operator FLOATINGPOINT_REM 2 "floating-point remainder"
operator FLOATINGPOINT_RTI 2 "floating-point round to integral"
operator FLOATINGPOINT_MIN 2 "floating-point minimum"
operator FLOATINGPOINT_MAX 2 "floating-point maximum"

operator FLOATINGPOINT_LEQ 2 "floating-point less than or equal"
operator FLOATINGPOINT_LT 2 "floating-point less than"
operator FLOATINGPOINT_GEQ 2 "floating-point greater than or equal"
operator FLOATINGPOINT_GT 2 "floating-point greater than"

operator FLOATINGPOINT_ISN 1 "floating-point is normal"
operator FLOATINGPOINT_ISSN 1 "floating-point is sub-normal"
operator FLOATINGPOINT_ISZ 1 "floating-point is zero"
operator FLOATINGPOINT_ISINF 1 "floating-point is infinite"
operator FLOATINGPOINT_ISNAN 1 "floating-point is NaN"



constant FLOATINGPOINT_TO_FP_IEEE_BITVECTOR_OP \
    ::CVC4::FloatingPointToFPIEEEBitVector \
    "::CVC4::FloatingPointConvertSortHashFunction<0x1>" \
    "util/floatingpoint.h" \
    "operator for to_fp from bit vector"

parameterized FLOATINGPOINT_TO_FP_IEEE_BITVECTOR FLOATINGPOINT_TO_FP_IEEE_BITVECTOR_OP 1 "convert an IEEE-754 bit vector to floating-point"



constant FLOATINGPOINT_TO_FP_FLOATINGPOINT_OP \
    ::CVC4::FloatingPointToFPFloatingPoint \
    "::CVC4::FloatingPointConvertSortHashFunction<0x2>" \
    "util/floatingpoint.h" \
    "operator for to_fp from floating point"

parameterized FLOATINGPOINT_TO_FP_FLOATINGPOINT FLOATINGPOINT_TO_FP_FLOATINGPOINT_OP 2 "convert between floating-point sorts"




constant FLOATINGPOINT_TO_FP_REAL_OP \
    ::CVC4::FloatingPointToFPReal \
    "::CVC4::FloatingPointConvertSortHashFunction<0x4>" \
    "util/floatingpoint.h" \
    "operator for to_fp from real"

parameterized FLOATINGPOINT_TO_FP_REAL FLOATINGPOINT_TO_FP_REAL_OP 2 "convert a real to floating-point"



constant FLOATINGPOINT_TO_FP_SIGNED_BITVECTOR_OP \
    ::CVC4::FloatingPointToFPSignedBitVector \
    "::CVC4::FloatingPointConvertSortHashFunction<0x8>" \
    "util/floatingpoint.h" \
    "operator for to_fp from signed bit vector"

parameterized FLOATINGPOINT_TO_FP_SIGNED_BITVECTOR FLOATINGPOINT_TO_FP_SIGNED_BITVECTOR_OP 2 "convert a signed bit vector to floating-point"



constant FLOATINGPOINT_TO_FP_UNSIGNED_BITVECTOR_OP \
    ::CVC4::FloatingPointToFPUnsignedBitVector \
    "::CVC4::FloatingPointConvertSortHashFunction<0x10>" \
    "util/floatingpoint.h" \
    "operator for to_fp from unsigned bit vector"

parameterized FLOATINGPOINT_TO_FP_UNSIGNED_BITVECTOR FLOATINGPOINT_TO_FP_UNSIGNED_BITVECTOR_OP 2 "convert an unsigned bit vector to floating-point"




constant FLOATINGPOINT_TO_UBV_OP \
    ::CVC4::FloatingPointToUBV \
    "::CVC4::FloatingPointToBVHashFunction<0x1>" \
    "util/floatingpoint.h" \
    "operator for to_ubv"

parameterized FLOATINGPOINT_TO_UBV FLOATINGPOINT_TO_UBV_OP 2 "convert a floating-point value to an unsigned bit vector"


constant FLOATINGPOINT_TO_SBV_OP \
    ::CVC4::FloatingPointToSBV \
    "::CVC4::FloatingPointToBVHashFunction<0x2>" \
    "util/floatingpoint.h" \
    "operator for to_sbv"

parameterized FLOATINGPOINT_TO_SBV FLOATINGPOINT_TO_SBV_OP 2 "convert a floating-point value to a signed bit vector"






constant FLOATINGPOINT_TO_REAL_OP \
    ::CVC4::FloatingPointToReal \
    "::CVC4::FloatingPointConvertSortHashFunction<0x20>" \
    "util/floatingpoint.h" \
    "operator for converting from floating_point to real"

parameterized FLOATINGPOINT_TO_REAL FLOATINGPOINT_TO_REAL_OP 1 "convert a floating-point value to a real"

endtheory
